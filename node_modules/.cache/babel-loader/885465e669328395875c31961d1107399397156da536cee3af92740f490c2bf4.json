{"ast":null,"code":"var _jsxFileName = \"/Users/Artur/Kodilla/react-app/src/components/SearchForm/SearchForm.js\",\n  _s = $RefreshSig$();\nimport styles from './SearchForm.module.scss';\nimport TextInput from '../TextInput/TextInput';\nimport Button from '../Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { searchUpdate } from '../../redux/searchStringRedux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = () => {\n  _s();\n  const [searchString, setSearchString] = useState('');\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(searchUpdate(searchString));\n    setSearchString('');\n  };\n  useEffect(() => {\n    // useEffect wykonuje się po każdym renderze komponentu\n    dispatch(searchUpdate('')); // wywołuje akcję searchUpdate i przekazuje do niej pusty string\n  }, [dispatch]); // drugi parametr to tablica zależności, która określa, kiedy useEffect ma się wykonać\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.searchForm,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      value: searchString,\n      onChange: e => setSearchString(e.target.value),\n      children: \"...Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"fa fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForm, \"6JJzD24QVm6tU/aRXejQv8YlqRo=\", false, function () {\n  return [useDispatch];\n});\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["styles","TextInput","Button","useDispatch","useEffect","useState","searchUpdate","jsxDEV","_jsxDEV","SearchForm","_s","searchString","setSearchString","dispatch","handleSubmit","e","preventDefault","className","searchForm","onSubmit","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/Artur/Kodilla/react-app/src/components/SearchForm/SearchForm.js"],"sourcesContent":["import styles from './SearchForm.module.scss';\nimport TextInput from '../TextInput/TextInput';\nimport Button from '../Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { searchUpdate } from '../../redux/searchStringRedux';\n\nconst SearchForm = () => {\n  const [searchString, setSearchString] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(searchUpdate( searchString ));\n    setSearchString('');\n  };\n\n  useEffect(() => { // useEffect wykonuje się po każdym renderze komponentu\n    dispatch(searchUpdate('')); // wywołuje akcję searchUpdate i przekazuje do niej pusty string\n  }, [dispatch]); // drugi parametr to tablica zależności, która określa, kiedy useEffect ma się wykonać\n\n  return (\n    <form className={styles.searchForm} onSubmit={handleSubmit}>\n      <TextInput value={searchString} onChange={(e) => setSearchString(e.target.value)}>...Search</TextInput>\n      <Button type=\"submit\"><span className=\"fa fa-search\" /></Button>\n    </form>\n  );\n};\n\nexport default SearchForm;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMQ,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAACP,YAAY,CAAEK,YAAa,CAAC,CAAC;IACtCC,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAEDR,SAAS,CAAC,MAAM;IAAE;IAChBS,QAAQ,CAACP,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEL,OAAA;IAAMS,SAAS,EAAEjB,MAAM,CAACkB,UAAW;IAACC,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBACzDZ,OAAA,CAACP,SAAS;MAACoB,KAAK,EAAEV,YAAa;MAACW,QAAQ,EAAGP,CAAC,IAAKH,eAAe,CAACG,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAAAD,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACvGnB,OAAA,CAACN,MAAM;MAAC0B,IAAI,EAAC,QAAQ;MAAAR,QAAA,eAACZ,OAAA;QAAMS,SAAS,EAAC;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEX,CAAC;AAACjB,EAAA,CArBID,UAAU;EAAA,QAGGN,WAAW;AAAA;AAAA0B,EAAA,GAHxBpB,UAAU;AAuBhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}